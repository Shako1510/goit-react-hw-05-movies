{"version":3,"file":"static/js/216.2269c24e.chunk.js","mappings":"qRAKaA,EAAaC,EAAAA,GAAAA,GAAH,gHAQVC,EAAWD,EAAAA,GAAAA,GAAH,6TAkBRE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2CAIVI,EAAUJ,EAAAA,GAAAA,IAAH,6DAKPK,EAAOL,EAAAA,GAAAA,KAAH,8CAIJM,EAASN,EAAAA,GAAAA,OAAH,knBA0BNO,EAAQP,EAAAA,GAAAA,MAAH,sG,SCUlB,EAzEe,WACX,IAAMQ,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAcT,EAAaU,IAAI,SA4BrC,OAbAC,EAAAA,EAAAA,YAAU,WACFF,IACAD,GAAW,IACXI,EAAAA,EAAAA,IAAyBH,GAAaI,KAAKT,GACtCU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQV,GAAW,IAK/B,GAAE,CAACC,EAAaN,KAIb,UAACV,EAAD,YACI,UAACC,EAAD,CAAMyB,SAvBO,SAAAC,GACjBA,EAAEC,iBAEFpB,EAAgB,CAAEqB,MAAOjB,IAAW,CAAC,GACrCC,EAAS,GACZ,EAkBO,WACI,SAACX,EAAD,CAAQ4B,KAAK,SAAb,UACI,wCAGJ,SAAC3B,EAAD,CACI4B,SAlCK,SAAAJ,GACjBd,EAASc,EAAEK,OAAOC,MACrB,EAiCeC,KAAK,OACLJ,KAAK,OACLG,MAAOrB,EACPuB,aAAa,MACbC,WAAS,EACTC,YAAY,gCAGnBvB,IAAW,SAACwB,EAAA,EAAD,IAEX5B,IACG,SAACf,EAAD,UACKe,EAAO6B,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOP,EAAwB,EAAxBA,KAAMQ,EAAkB,EAAlBA,YAC5B,OACI,SAAC7C,EAAD,WACI,UAACC,EAAD,CAAY6C,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMzC,GAAhD,WACI,gBAAK0C,IACDJ,EAAW,yCAAqCA,GAAgBK,EAASC,IAAKP,EAAOQ,MAAO,IAC5FC,OAAQ,MACXT,GAASP,MALHM,EAStB,QAKpB,EC3Ec,SAASW,IACpB,OACI,4BACK,SAAC,EAAD,KACD,SAAC,KAAD,MAIX,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { Link } from 'react-router-dom';\n\n\nexport const ListMovies = styled.ul`\ndisplay: flex;\nflex-wrap: wrap; \nmargin: 0px auto;\npadding: 0px;\nlist-style: none;\n`;\n\nexport const ListItem = styled.li`\ntext-align: center;\nmargin-bottom: 30px;  \nmargin-right: 30px; \npadding: 15px; \nwidth: 100%;\nflex-basis: calc((100% - 6 * 15px) / 5);\nbackground-color: #fff;\nborder-radius: 4px;\n&:nth-of-type(4n) {\n    margin-right: 0;\n }\n \n &:nth-last-of-type(-n+4) {\n   margin-bottom: 0;   \n}\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n`;\n\nexport const ListBox = styled.div`\npadding: 60px;\ntext-align: center;\n`;\n\nexport const Form = styled.form`\nmargin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  margin-right: 8px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport const Input = styled.input`\nmin-width: 180px;\npadding: 8px 16px;\nfont-size: 18px;\nborder-radius: 2px;\n`;","import { fetchMoviesBySearchQuery } from '../Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Loading from '../Loading/Loading';\nimport noImage from '../../images/noImage.png';\nimport { ListMovies, ListItem, StyledLink, ListBox, Form, Button, Input } from './Movies.styled';\n\nconst Movies = () => {\n    const location = useLocation();\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false)\n    const searchQuery = searchParams.get('movie');\n\n    const handleChange = e => {\n        setQuery(e.target.value);\n    };\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // setSearchParams({ movie: query });\n        setSearchParams({ movie: query } || {})\n        setQuery('');\n    };\n\n\n    useEffect(() => {\n        if (searchQuery) {\n            setLoading(true)\n            fetchMoviesBySearchQuery(searchQuery).then(setMovies)\n                .catch(error => console.log(error))\n                .finally(setLoading(false))\n        }\n        if (!movies) {\n            return;\n        }\n    }, [searchQuery, movies]);\n\n\n    return (\n        <ListBox>\n            <Form onSubmit={handleSubmit}>\n                <Button type=\"submit\">\n                    <span>Search</span>\n                </Button>\n\n                <Input\n                    onChange={handleChange}\n                    name=\"name\"\n                    type=\"text\"\n                    value={query}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                />\n            </Form>\n            {loading && <Loading />}\n\n            {movies && (\n                <ListMovies>\n                    {movies.map(({ id, title, name, poster_path }) => {\n                        return (\n                            <ListItem key={id}>\n                                <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                                    <img src={\n                                        poster_path ? `https://image.tmdb.org/t/p/w342${poster_path}` : noImage} alt={title} width={260}\n                                        height={340} />\n                                    {title || name}\n                                </StyledLink>\n                            </ListItem>\n                        );\n                    })}\n                </ListMovies>\n            )}\n        </ListBox>\n    )\n}\n\nexport default Movies;","import Movies from '../../components/Movies/Movies';\nimport { Outlet } from \"react-router-dom\";\n\nexport default function MoviesPage() {\n    return (\n        <div>\n            {<Movies />}\n            <Outlet />\n        </div>\n    )\n\n}"],"names":["ListMovies","styled","ListItem","StyledLink","Link","ListBox","Form","Button","Input","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","query","setQuery","loading","setLoading","searchQuery","get","useEffect","fetchMoviesBySearchQuery","then","catch","error","console","log","finally","onSubmit","e","preventDefault","movie","type","onChange","target","value","name","autoComplete","autoFocus","placeholder","Loading","map","id","title","poster_path","to","state","from","src","noImage","alt","width","height","MoviesPage"],"sourceRoot":""}